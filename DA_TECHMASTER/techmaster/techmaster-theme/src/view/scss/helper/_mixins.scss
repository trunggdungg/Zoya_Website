/*
 * Copyright 2024 youngmonkeys.org
 * 
 * Licensed under the ezyplatform, Version 1.0.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     https://youngmonkeys.org/licenses/ezyplatform-1.0.0.txt
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

//Border Radius
@use "sass:math";

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

//Center Block
@mixin center-block ($width) {
  width: $width;
  display: block;
  margin: 0 auto;
}

// Single side border-radius
@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
  background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
  background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}

// CSS Triangles Mixin
@mixin css-triangle($direction, $color, $height, $width) {
  // Base styles for all triangles
  border-style: solid;
  height: 0;
  width: 0;
  // Cardinal Directions - can't be scalene this way
  @if($direction == 'top') {
    border-color: transparent transparent $color transparent;
    border-width: 0 ($width*0.5) $height ($width*0.5);
  }
  @if ($direction == 'bottom') {
    border-color: $color transparent transparent transparent;
    border-width: $height ($width*0.5) 0 ($width*0.5);
  }
  @if ($direction == 'right') {
    border-color: transparent transparent transparent $color;
    border-width: ($height*0.5) 0 ($height*0.5) $width;
  }
  @if ($direction == 'left') {
    border-color: transparent $color transparent transparent;
    border-width: ($height*0.5) $width ($height*0.5) 0;
  }
  // Ordinal Directions - can be scalene this way!
  @if ($direction == 'top-left') {
    border-color: $color transparent transparent transparent;
    border-width: $height $width 0 0;
  }
  @if ($direction == 'top-right') {
    border-color: transparent $color transparent transparent;
    border-width: 0 $width $height 0;
  }
  @if ($direction == 'bottom-left') {
    border-color: transparent transparent transparent $color;
    border-width: $height 0 0 $width;
  }
  @if ($direction == 'bottom-right') {
    border-color: transparent transparent $color transparent;
    border-width: 0 0 $height $width;
  }
}



//Box shadow
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}
//Text Shadow
@mixin text-shadow($top, $left, $blur, $color) {
  -webkit-text-shadow: $top $left $blur $color;
  -moz-text-shadow: $top $left $blur $color;
  text-shadow: $top $left $blur $color;
}

/*Placeholders*/
@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin placeholder-color($color) {
  &.placeholder {
    color: $color
  }

  &:-moz-placeholder {
    color: $color
  }

  &::-webkit-input-placeholder {
    color: $color
  }

  &:-ms-input-placeholder {
    color: $color
  }
}

/*Truncate*/
@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

//Clearfix
@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/*--------------------------------
	Responsive ratio
	Used for creating scalable elements that maintain the same ratio
	example: .element { @include responsive-ratio(400, 300); }
*/
@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote(  math.div($y, $x)  * 100 + '%' );

  @if $pseudo {
    &::before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}

@mixin responsive-ratio-img($option: cover){
  position: absolute;left: 0;top: 0;width: 100%;height: 100%;object-fit: $option;
}


//Transition
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  transition: $args;
}

// Browser Prefixes
@mixin transform($transforms) {
  -webkit-transform: $transforms;
  -moz-transform: $transforms;
  transform: $transforms;
}

// Rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// Scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

// Translate
@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}

// Skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

// Transform Origin
@mixin transform-origin ($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  transform-origin: $origin;
}

//Backgroud Gradien Vertical Y
@mixin linear-gradient-v ($from, $to) {
  background-color: $from;
  background-image: -webkit-linear-gradient(top, $from, $to); /* Chrome 10-25, iOS 5+, Safari 5.1+ */
  background-image:         linear-gradient(to bottom, $from, $to); /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}

//Backgroud Gradien Horizontal X
@mixin linear-gradient-h ($from, $to) {
  background-color: $from;
  background-image: -webkit-linear-gradient(left, $from, $to); /* Chrome 10-25, iOS 5+, Safari 5.1+ */
  background-image:         linear-gradient(to right, $from, $to); /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}


//Color RGBA
@mixin transparent-backgound($color: #000, $value:0.5){
  $start: "rgb(";
  $end: ")";
  background: #{$start}red($color), green($color), blue($color)#{$end};
  background: rgba($color, $value);
}

//Line number
@mixin line-number ($number) {
  overflow: hidden;text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $number;
  -webkit-box-orient: vertical;
}

@mixin aspect-ratio($width, $height, $mode: contain) {
  $padding: unquote(  math.div($height, $width)  * 100 + '%' );
  display: block;
  position: relative;
  &::before {
    content: '';
    width: 100%;
    padding-top: $padding;
    display: block;
  }
  img {@include responsive-ratio-img($mode)}
}

@mixin animation($value) {
  -webkit-animation: $value;
  animation: $value;
}

//Custom scrollbar chrome
@mixin scroll-bar ($width,$scrollbar-track,$scrollbar-thumb,$scrollbar-thumb-hover) {
  /* width */
  ::-webkit-scrollbar {width: $width;}
  /* Track */
  ::-webkit-scrollbar-track {background: $scrollbar-track;}
  /* Handle */
  ::-webkit-scrollbar-thumb {background: $scrollbar-thumb;}
  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {background: $scrollbar-thumb-hover;}
}

@mixin scroll-bar-ff (){
  scrollbar-width: thin;          /* "auto" or "thin"  */
  scrollbar-color: blue $color-border $color-text;   /* scroll thumb & track */
}
